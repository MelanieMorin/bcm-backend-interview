{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { stations } from '../../power-stations';\nimport { environment } from '../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/material/button\";\nimport * as i5 from \"@angular/material/form-field\";\nimport * as i6 from \"@angular/material/datepicker\";\n\nfunction AppComponent_mat_error_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Date de d\\u00E9but invalide\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AppComponent_mat_error_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Date de fin invalide\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AppComponent_mat_error_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Plage de dates invalide\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let AppComponent = /*#__PURE__*/(() => {\n  class AppComponent {\n    constructor(http) {\n      this.http = http;\n      this.powerStations = [];\n      this.loading = false;\n      this.initDateForm();\n      this.initConfig();\n    }\n\n    initDateForm() {\n      const todayDate = new Date();\n      let oneWeekAgoDate = new Date();\n      oneWeekAgoDate.setDate(todayDate.getDate() - 7);\n      this.dateRange = new FormGroup({\n        start: new FormControl(oneWeekAgoDate),\n        end: new FormControl(todayDate)\n      }, Validators.required);\n    }\n\n    initConfig() {\n      this.powerStations = stations;\n    }\n\n    export() {\n      this.loading = true;\n      /*const httpParams = new HttpParams()\r\n        .append('from', formatDate(this.from))\r\n        .append('to', formatDate(this.to));*/\n\n      this.powerStations.forEach(station => {\n        this.http.get(environment.apiUrl + station.name.toLowerCase() + '?from=' + formatDate(this.dateRange.get('start').value) + '&to=' + formatDate(this.dateRange.get('end').value)).subscribe(res => {\n          this.loading = false;\n          console.log(res);\n        }, err => {\n          this.loading = false;\n          console.log(err);\n        });\n      });\n    }\n\n  }\n\n  AppComponent.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n  };\n\n  AppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"my-app\"]],\n    decls: 19,\n    vars: 7,\n    consts: [[1, \"container\"], [\"appearance\", \"fill\"], [3, \"formGroup\", \"rangePicker\"], [\"matStartDate\", \"\", \"formControlName\", \"start\", \"placeholder\", \"Start date\"], [\"matEndDate\", \"\", \"formControlName\", \"end\", \"placeholder\", \"End date\"], [\"matSuffix\", \"\", 3, \"for\"], [\"picker\", \"\"], [4, \"ngIf\"], [\"mat-button\", \"\", 3, \"disabled\", \"click\"]],\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\");\n        i0.ɵɵtext(2, \"Surveillance des centrales\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"mat-form-field\", 1)(4, \"mat-label\");\n        i0.ɵɵtext(5, \"S\\u00E9lectionner une p\\u00E9riode\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"mat-date-range-input\", 2);\n        i0.ɵɵelement(7, \"input\", 3)(8, \"input\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"mat-hint\");\n        i0.ɵɵtext(10, \"JJ/MM/AAAA \\u2013 JJ/MM/AAAA\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(11, \"mat-datepicker-toggle\", 5)(12, \"mat-date-range-picker\", null, 6);\n        i0.ɵɵtemplate(14, AppComponent_mat_error_14_Template, 2, 0, \"mat-error\", 7);\n        i0.ɵɵtemplate(15, AppComponent_mat_error_15_Template, 2, 0, \"mat-error\", 7);\n        i0.ɵɵtemplate(16, AppComponent_mat_error_16_Template, 2, 0, \"mat-error\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"button\", 8);\n        i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_17_listener() {\n          return ctx.export();\n        });\n        i0.ɵɵtext(18, \"Exporter\");\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        const _r0 = i0.ɵɵreference(13);\n\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"formGroup\", ctx.dateRange)(\"rangePicker\", _r0);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"for\", _r0);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.dateRange.controls.start.hasError(\"matStartDateInvalid\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.dateRange.controls.end.hasError(\"matEndDateInvalid\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.dateRange.controls.end.value < ctx.dateRange.controls.start.value);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", ctx.dateRange.invalid);\n      }\n    },\n    dependencies: [i2.NgIf, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName, i4.MatButton, i5.MatError, i5.MatFormField, i5.MatHint, i5.MatLabel, i5.MatSuffix, i6.MatDatepickerToggle, i6.MatDateRangeInput, i6.MatStartDate, i6.MatEndDate, i6.MatDateRangePicker],\n    styles: [\"[_nghost-%COMP%]{height:100%;display:flex;flex-direction:column}.container[_ngcontent-%COMP%]{flex:1 auto;margin:20px}\"]\n  });\n  return AppComponent;\n})();\n\nfunction formatDate(date) {\n  console.log(date);\n  const res = [twoCharsString(date.getDate()), twoCharsString(date.getMonth()), date.getFullYear().toString()].join('-');\n  console.log(res);\n  return res;\n}\n\nfunction twoCharsString(number) {\n  return number >= 10 ? number.toString() : '0' + number.toString();\n}","map":null,"metadata":{},"sourceType":"module"}