{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { HttpParams } from '@angular/common/http';\nimport { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { stations } from '../../power-stations';\nlet AppComponent = class AppComponent {\n  constructor(http) {\n    this.http = http;\n    this.powerStations = [];\n    this.loading = false;\n    this.initDateForm();\n    this.initConfig();\n  }\n\n  initDateForm() {\n    const todayDate = new Date();\n    let oneWeekAgoDate = new Date();\n    oneWeekAgoDate.setDate(todayDate.getDate() - 7);\n    this.dateRange = new FormGroup({\n      start: new FormControl(oneWeekAgoDate),\n      end: new FormControl(todayDate)\n    }, Validators.required);\n  }\n\n  initConfig() {\n    this.powerStations = stations;\n  }\n\n  getApiData() {\n    this.loading = true;\n    const httpParams = new HttpParams().append('from', formatDate(this.dateRange.get('start').value)).append('to', formatDate(this.dateRange.get('end').value));\n    this.powerStations.forEach(station => {\n      this.http.get('/api/' + station.name.toLowerCase(), {\n        params: httpParams,\n        responseType: 'text',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).subscribe(res => {\n        this.loading = false;\n        console.log(res);\n        this.formatResponse(station, res);\n      }, err => {\n        this.loading = false;\n        console.log(err);\n      });\n    });\n  }\n\n  formatResponse(station, res) {\n    let jsonResponse = {};\n\n    if (station.format && station.format.type) {\n      switch (station.format.type) {\n        case 'json':\n          jsonResponse = JSON.parse(res);\n          break;\n\n        case 'csv':\n          jsonResponse = {};\n          break;\n\n        default:\n          // afficher une erreur de lecture des données : format 'station.format.type' non pris en charge\n          break;\n      }\n\n      console.log(jsonResponse);\n    } // else : afficher une erreur de lecture des données : format de données inconnu\n\n  }\n\n};\nAppComponent = __decorate([Component({\n  selector: 'my-app',\n  templateUrl: `./app.component.html`,\n  styleUrls: ['./app.component.scss']\n})], AppComponent);\nexport { AppComponent };\n\nfunction formatDate(date) {\n  return [twoCharsString(date.getDate()), twoCharsString(date.getMonth() + 1), date.getFullYear().toString()].join('-');\n}\n\nfunction twoCharsString(number) {\n  return number >= 10 ? number.toString() : '0' + number.toString();\n}","map":null,"metadata":{},"sourceType":"module"}