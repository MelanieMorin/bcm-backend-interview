{"ast":null,"code":"import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { map, Observable } from 'rxjs';\nimport { environment } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/material/button\";\nimport * as i4 from \"@angular/material/progress-bar\";\n\nfunction PowerStationComponent_button_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 4);\n    i0.ɵɵlistener(\"click\", function PowerStationComponent_button_3_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.export());\n    });\n    i0.ɵɵtext(1, \" Exporter \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction PowerStationComponent_mat_progress_bar_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-progress-bar\", 5);\n  }\n}\n\nfunction PowerStationComponent_div_5_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"date\");\n    i0.ɵɵpipe(3, \"date\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" Fichier g\\u00E9n\\u00E9r\\u00E9 le \", i0.ɵɵpipeBind2(2, 2, ctx_r5.fileDate, \"dd/MM/yyyy\"), \" \\u00E0 \", i0.ɵɵpipeBind2(3, 5, ctx_r5.fileDate, \"mm:ss\"), \" \");\n  }\n}\n\nfunction PowerStationComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 0);\n    i0.ɵɵtemplate(1, PowerStationComponent_div_5_span_1_Template, 4, 8, \"span\", 6);\n    i0.ɵɵelementStart(2, \"button\", 7);\n    i0.ɵɵtext(3, \"CSV\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"button\", 7);\n    i0.ɵɵtext(5, \"JSON\");\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.fileDate);\n  }\n}\n\nexport let PowerStationComponent = /*#__PURE__*/(() => {\n  class PowerStationComponent {\n    constructor(http) {\n      this.http = http;\n      this.loading = false;\n      this.fileDate = new Date();\n    }\n\n    export() {\n      this.loading = true;\n      /*const httpParams = new HttpParams()\r\n        .append('from', formatDate(this.from))\r\n        .append('to', formatDate(this.to));*/\n\n      this.getPowerInfo(this.station.name.toLowerCase(), formatDate(this.from), formatDate(this.to)).subscribe(res => {\n        this.loading = false;\n        console.log('là', res);\n      }, err => {\n        this.loading = false;\n        console.log('ou', err);\n      });\n    }\n\n    getPowerInfo(station, from, to) {\n      return this.http.get(environment.apiUrl + station + '?from=' + from + '&to=' + to, {\n        headers: new HttpHeaders({\n          'Access-Control-Allow-Origin': '*',\n          'Access-Control-Allow-Headers': 'Origin, X-Requested-With, Content-Type, Accept',\n          'Content-Type': 'application/json',\n          'Access-Control-Allow-Methods': 'GET,POST,OPTIONS,DELETE,PUT'\n        }),\n        responseType: 'json'\n      }).pipe(map(res => {\n        console.log('res', res);\n        return [];\n      }));\n      /*let url = environment.apiUrl + station;\r\n      url += 'from=' + encodeURIComponent('' + from) + '&';\r\n      url += 'to=' + encodeURIComponent('' + to) + '&';\r\n      url = url.replace(/[?&]$/, '');\r\n      let options: any = {\r\n        observe: 'response',\r\n        responseType: 'json',\r\n        headers: new HttpHeaders({\r\n          Accept: 'application/json',\r\n        }),\r\n      };\r\n            //return this.http.get<PowerInfo[]>(url_, options_);\r\n      return this.http.request('get', url, options).pipe(\r\n        map((response) => {\r\n          if (response instanceof HttpResponseBase) {\r\n            try {\r\n              console.log('ici', response);\r\n              return [];\r\n            } catch (e) {\r\n              return [];\r\n            }\r\n          } else of([]);\r\n        })\r\n      );*/\n    }\n\n  }\n\n  PowerStationComponent.ɵfac = function PowerStationComponent_Factory(t) {\n    return new (t || PowerStationComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n  };\n\n  PowerStationComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: PowerStationComponent,\n    selectors: [[\"power-station\"]],\n    inputs: {\n      station: \"station\",\n      from: \"from\",\n      to: \"to\"\n    },\n    decls: 6,\n    vars: 4,\n    consts: [[\"fxLayout\", \"row\"], [\"mat-button\", \"\", 3, \"click\", 4, \"ngIf\"], [\"mode\", \"indeterminate\", 4, \"ngIf\"], [\"fxLayout\", \"row\", 4, \"ngIf\"], [\"mat-button\", \"\", 3, \"click\"], [\"mode\", \"indeterminate\"], [4, \"ngIf\"], [\"mat-button\", \"\"]],\n    template: function PowerStationComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h4\");\n        i0.ɵɵtext(1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\", 0);\n        i0.ɵɵtemplate(3, PowerStationComponent_button_3_Template, 2, 0, \"button\", 1);\n        i0.ɵɵtemplate(4, PowerStationComponent_mat_progress_bar_4_Template, 1, 0, \"mat-progress-bar\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(5, PowerStationComponent_div_5_Template, 6, 1, \"div\", 3);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate(ctx.station.name);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.station && ctx.from && ctx.to);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.loading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.file);\n      }\n    },\n    dependencies: [i2.NgIf, i3.MatButton, i4.MatProgressBar, i2.DatePipe],\n    encapsulation: 2\n  });\n  return PowerStationComponent;\n})();\n\nfunction formatDate(date) {\n  return [twoCharsString(date.getDate()), twoCharsString(date.getMonth()), date.getFullYear().toString()].join('-');\n}\n\nfunction twoCharsString(number) {\n  return number > 10 ? number.toString() : '0' + number.toString();\n}","map":null,"metadata":{},"sourceType":"module"}